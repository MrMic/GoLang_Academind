package main

import (
	"net/http"

	"github.com/gin-gonic/gin"
	"michaelchlon.fr/api/models"
)

func main() {
	server := gin.Default()

	server.GET("/events", getEvents) // * NOTE: Register the handler for the "/events" route
	server.POST("/events", createEvent)

	server.Run(":8082") // * NOTE: Start the server on port 8082 (localhost:8082)
}

// * NOTE: Define a handler for the "/events" route (GET) -----------------------------
func getEvents(context *gin.Context) {
	events := models.GetAllEvents()     // * NOTE: Retrieve all events from the model
	context.JSON(http.StatusOK, events) // * NOTE: Respond with a JSON object containing a message
}

// * NOTE: Define a handler for the "/events" route (POST) -----------------------------
func createEvent(context *gin.Context) {
	var event models.Event // * NOTE: Create a new event instance

	// * NOTE: Bind the JSON request body to the event instance
	if err := context.ShouldBindJSON(&event); err != nil {
		context.JSON(http.StatusBadRequest, gin.H{"error": err.Error()})
		return
	}

	event.ID = 1     // * NOTE: Set a default ID for the event (in a real application, this would be generated by the database)
	event.UserID = 1 // * NOTE: Set a default UserID for the event (in a real application, this would be set based on the authenticated user)
	event.Save()     // * NOTE: Save the event using the Save method defined in the model

	context.JSON(http.StatusCreated, gin.H{
		"message": "Event created successfully!",
		"event":   event,
	}) // * NOTE: Respond with a success message
}
